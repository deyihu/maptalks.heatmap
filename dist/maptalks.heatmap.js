/*!
 * maptalks.heatmap v0.6.1
 * LICENSE : MIT
 * (c) 2016-2022 maptalks.org
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).maptalks=t.maptalks||{},t.maptalks)}(this,(function(t,e){"use strict";function a(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(a){if("default"!==a){var i=Object.getOwnPropertyDescriptor(t,a);Object.defineProperty(e,a,i.get?i:{enumerable:!0,get:function(){return t[a]}})}})),e.default=t,Object.freeze(e)}var i=a(e),s={exports:{}};!function(t){function e(t){if(!(this instanceof e))return new e(t);this._canvas=t="string"==typeof t?document.getElementById(t):t,this._ctx=t.getContext("2d"),this._width=t.width,this._height=t.height,this._max=1,this._data=[]}t.exports=e,e.prototype={defaultRadius:25,defaultGradient:{.4:"blue",.6:"cyan",.7:"lime",.8:"yellow",1:"red"},data:function(t){return this._data=t,this},max:function(t){return this._max=t,this},add:function(t){return this._data.push(t),this},clear:function(){return this._data=[],this},radius:function(t,e){e=void 0===e?15:e;var a=this._circle=this._createCanvas(),i=a.getContext("2d"),s=this._r=t+e;return a.width=a.height=2*s,i.shadowOffsetX=i.shadowOffsetY=2*s,i.shadowBlur=e,i.shadowColor="black",i.beginPath(),i.arc(-s,-s,t,0,2*Math.PI,!0),i.closePath(),i.fill(),this},resize:function(){this._width=this._canvas.width,this._height=this._canvas.height},gradient:function(t){var e=this._createCanvas(),a=e.getContext("2d"),i=a.createLinearGradient(0,0,0,256);for(var s in e.width=1,e.height=256,t)i.addColorStop(+s,t[s]);return a.fillStyle=i,a.fillRect(0,0,1,256),this._grad=a.getImageData(0,0,1,256).data,this},draw:function(t){this._circle||this.radius(this.defaultRadius),this._grad||this.gradient(this.defaultGradient);var e=this._ctx;e.clearRect(0,0,this._width,this._height);for(var a,i=0,s=this._data.length;i<s;i++)a=this._data[i],e.globalAlpha=Math.max(a[2]/this._max,void 0===t?.05:t),e.drawImage(this._circle,a[0]-this._r,a[1]-this._r);var r=e.getImageData(0,0,this._width,this._height);return this._colorize(r.data,this._grad),e.putImageData(r,0,0),this},_colorize:function(t,e){for(var a,i=0,s=t.length;i<s;i+=4)(a=4*t[i+3])&&(t[i]=e[a],t[i+1]=e[a+1],t[i+2]=e[a+2])},_createCanvas:function(){return"undefined"!=typeof document?document.createElement("canvas"):new this._canvas.constructor}}}(s);var r=s.exports;const n={"max":1,"gradient":{.4:"blue",.6:"cyan",.7:"lime",.8:"yellow",1:"red"},"radius":25,"blur":15,"heatValueScale":1,"minOpacity":.05};class h extends i.Layer{constructor(t,e,a){Array.isArray(e)||(a=e,e=null),super(t,a),this._heats=e||[]}getData(){return this._heats}setData(t){return this._heats=t||[],this.redraw()}addPoint(t){return t?(t[0]&&Array.isArray(t[0])?i.Util.pushIn(this._heats,t):this._heats.push(t),this.redraw()):this}onConfig(t){for(const e in t)if(n[e])return this.redraw();return this}redraw(){const t=this._getRenderer();return t&&(t.clearHeatCache(),t.setToRedraw()),this}isEmpty(){return!this._heats.length}clear(){return this._heats=[],this.redraw(),this.fire("clear"),this}toJSON(t){t||(t={});const e={"type":this.getJSONType(),"id":this.getId(),"options":this.config()},a=this.getData();if(t.clipExtent){let s=new i.Extent(t.clipExtent);const r=this._getHeatRadius();r&&(s=s._expand(r));const n=[];for(let t=0,e=a.length;t<e;t++)s.contains(new i.Coordinate(a[t][0],a[t][1]))&&n.push(a[t]);e.data=n}else e.data=a;return e}static fromJSON(t){return t&&"HeatLayer"===t.type?new h(t.id,t.data,t.options):null}_getHeatRadius(){return this._getRenderer()?this._getRenderer()._heatRadius:null}}h.mergeOptions(n),h.registerJSONType("HeatLayer"),h.registerRenderer("canvas",class extends i.renderer.CanvasRenderer{draw(){const t=this.getMap(),e=this.layer,a=t.getContainerExtent();let i=this.prepareCanvas(),s=a;if(i){if(i=i.convertTo((e=>t._pointToContainerPoint(e))),!i.intersects(a))return void this.completeRender();s=a.intersection(i)}this._heater||(this._heater=r(this.canvas)),this._heater.radius(e.options.radius||this._heater.defaultRadius,e.options.blur),e.options.gradient&&this._heater.gradient(e.options.gradient),this._heater.max(e.options.max),this._heatViews||(this._heatViews=[]);const n=e.getData();if(0===n.length)return void this.completeRender();const h=this._heatData(n,s);this._heater.data(h).draw(e.options.minOpacity),this.completeRender()}drawOnInteracting(){this.draw()}_heatData(t,e){const a=this.getMap(),s=this.layer,r=a.getProjection(),n=[],h=this._heater._r,o=void 0===s.options.max?1:s.options.max,d=h/2,c=[],l=a.offsetPlatform(),u=l.x%d,_=l.y%d;let f,p,g,m,w,y;e=e.expand(h).convertTo((t=>new i.Point(a._containerPointToPrj(t)))),this._heatRadius=h;for(let n=0,h=t.length;n<h;n++)f=t[n],this._heatViews[n]||(this._heatViews[n]=r.project(new i.Coordinate(f[0],f[1]))),p=this._heatViews[n],e.contains(p)&&(p=a._prjToContainerPoint(p),m=Math.floor((p.x-u)/d)+2,w=Math.floor((p.y-_)/d)+2,y=(void 0!==f[2]?+f[2]:.1)*s.options.heatValueScale,c[w]=c[w]||[],g=c[w][m],g?(g[0]=(g[0]*g[2]+p.x*y)/(g[2]+y),g[1]=(g[1]*g[2]+p.y*y)/(g[2]+y),g[2]+=y):c[w][m]=[p.x,p.y,y]);for(let t=0,e=c.length;t<e;t++)if(c[t])for(let e=0,a=c[t].length;e<a;e++)g=c[t][e],g&&n.push([Math.round(g[0]),Math.round(g[1]),Math.min(g[2],o)]);return n}onZoomEnd(){delete this._heatViews,super.onZoomEnd.apply(this,arguments)}onResize(){super.onResize.apply(this,arguments),this.canvas&&(this._heater._width=this.canvas.width,this._heater._height=this.canvas.height)}onRemove(){this.clearHeatCache(),delete this._heater}clearHeatCache(){delete this._heatViews}}),t.HeatLayer=h,Object.defineProperty(t,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.heatmap v0.6.1")}));
